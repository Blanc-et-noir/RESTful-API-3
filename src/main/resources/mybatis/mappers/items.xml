<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.api.mapper.ItemMapper">
	<select id="readNewItemId" resultType="Integer">
		SELECT NEXTVAL(seq_item_id)
	</select>
	
	<select id="readItemByItemId" resultType="ItemEntity" parameterType="HashMap">
		SELECT *
		FROM items NATURAL JOIN users
		WHERE item_id = ${item_id} AND item_status = 'N' AND user_status = 'N'
	</select>
	
	<select id="readCommentByCommentId" resultType="CommentEntity" parameterType="HashMap">
		SELECT *
		FROM comments NATURAL JOIN users
		WHERE item_id = ${item_id} AND comment_id = ${comment_id} AND user_id = #{user_id} AND comment_status = 'N' AND user_status = 'N'
	</select>
	
	<select id="readItems" resultType="ItemEntity" parameterType="HashMap">
		SELECT *
		FROM(
			(SELECT i.*
			FROM items i
			NATURAL JOIN users
			WHERE item_status = 'N' AND user_status = 'N'
			<if test="hashtags != null">
				AND EXISTS(
					SELECT 1
					FROM hashtags h
					WHERE i.item_id = h.item_id AND REPLACE(h.hashtag_content,' ', '') IN <foreach collection="hashtags" open="(" close=")" item="value" separator=",">REPLACE(#{value},' ', '')</foreach>
				)
			</if>
			) t1
			LEFT OUTER JOIN (
				SELECT t.*
				FROM(
					SELECT item_image_id, item_id, ROW_NUMBER() OVER(PARTITION BY item_id ORDER BY item_id ASC) lvl
					FROM item_images
				) t
				WHERE t.lvl = 1
			) t2 USING(item_id)
		)
		ORDER BY item_id DESC
		OFFSET ${offset} ROWS FETCH NEXT ${limit} ROWS ONLY
	</select>
	
	<insert id="createItem" parameterType="HashMap">
		INSERT INTO items
		VALUES(${item_id},#{item_name},#{item_description},${item_price},${item_number},NOW(),'N',#{user_id})
	</insert>
	
	<insert id="createHashtags" parameterType="HashMap">
		INSERT INTO hashtags(hashtag_content, item_id) VALUES
		<foreach collection="hashtags" separator="," item="value">
			(#{value}, ${item_id})
		</foreach>
	</insert>
	
	<insert id="createItemImages" parameterType="HashMap">
		INSERT INTO item_images VALUES
		<foreach collection="image_files" separator="," item="image">
			(NEXTVAL(seq_item_image_id),#{image.item_image_original_name},#{image.item_image_stored_name},#{image.item_image_extension},${image.item_image_size},'N',${item_id})
		</foreach>
	</insert>
	
	<insert id="createCommentContent" parameterType="HashMap">
		INSERT INTO comments
		VALUES(NEXTVAL(seq_comment_id),NULL,#{comment_content},NOW(),'N',${item_id},#{user_id})
	</insert>
	
	<update id="deleteComment" parameterType="HashMap">
		UPDATE comments
		SET comment_status = 'Y'
		WHERE comment_id = ${comment_id} AND user_id = #{user_id} AND comment_status = 'N'
	</update>
</mapper>